{"uid":"e18a52bf132fabf8","name":"Test get single user details","fullName":"tests.test_users.TestUsersAPI#test_get_user","historyId":"14f75fd339797ae4c852920709775668","time":{"start":1733114575244,"stop":1733114575528,"duration":284},"description":"Verify retrieving details for a specific user","descriptionHtml":"<p>Verify retrieving details for a specific user</p>\n","status":"failed","statusMessage":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short","statusTrace":"self = <tests.test_users.TestUsersAPI object at 0x7f6daabb41d0>\nuser_api_client = <services.users.user_api_client.UserAPIClient object at 0x7f6daabb8d10>\nnew_user = {'avatar_url': '', 'email': 'rrobles@example.org', 'name': 'Katherine', 'nickname': '', ...}\n\n    @allure.title(\"Test get single user details\")\n    @allure.description(\"Verify retrieving details for a specific user\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_user(self, user_api_client: UserAPIClient, new_user: dict) -> None:\n        \"\"\"\n        Test getting user details by UUID.\n    \n        :param user_api_client: Instance of UserAPIClient\n        :param new_user: Fixture with a newly created user\n        \"\"\"\n        task_id = \"api-23\"\n        user_uuid = new_user[\"uuid\"]\n    \n        with allure.step(f\"Retrieving user details for UUID {user_uuid}\"):\n            user_data: dict[str, Any] = user_api_client.get_user(user_uuid, task_id)\n    \n            expected_keys = [\"avatar_url\", \"email\", \"name\", \"nickname\", \"uuid\"]\n            assert len(user_data) == len(\n                expected_keys\n            ), f\"Expected {len(expected_keys)} keys, but got {len(user_data)}\"\n            assert user_data[\"uuid\"] == user_uuid, \"UUIDs don't match\"\n    \n            try:\n>               UserResponse.model_validate(user_data)\nE               pydantic_core._pydantic_core.ValidationError: 1 validation error for UserResponse\nE               nickname\nE                 String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\nE                   For further information visit https://errors.pydantic.dev/2.10/v/string_too_short\n\ntests/test_users.py:74: ValidationError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.test_users.TestUsersAPI object at 0x7f6daabb41d0>\nuser_api_client = <services.users.user_api_client.UserAPIClient object at 0x7f6daabb8d10>\nnew_user = {'avatar_url': '', 'email': 'rrobles@example.org', 'name': 'Katherine', 'nickname': '', ...}\n\n    @allure.title(\"Test get single user details\")\n    @allure.description(\"Verify retrieving details for a specific user\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_user(self, user_api_client: UserAPIClient, new_user: dict) -> None:\n        \"\"\"\n        Test getting user details by UUID.\n    \n        :param user_api_client: Instance of UserAPIClient\n        :param new_user: Fixture with a newly created user\n        \"\"\"\n        task_id = \"api-23\"\n        user_uuid = new_user[\"uuid\"]\n    \n        with allure.step(f\"Retrieving user details for UUID {user_uuid}\"):\n            user_data: dict[str, Any] = user_api_client.get_user(user_uuid, task_id)\n    \n            expected_keys = [\"avatar_url\", \"email\", \"name\", \"nickname\", \"uuid\"]\n            assert len(user_data) == len(\n                expected_keys\n            ), f\"Expected {len(expected_keys)} keys, but got {len(user_data)}\"\n            assert user_data[\"uuid\"] == user_uuid, \"UUIDs don't match\"\n    \n            try:\n                UserResponse.model_validate(user_data)\n            except ValidationError as e:\n                msg = f\"User data validation failed: {e}\"\n>               raise AssertionError(msg) from e\nE               AssertionError: User data validation failed: 1 validation error for UserResponse\nE               nickname\nE                 String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\nE                   For further information visit https://errors.pydantic.dev/2.10/v/string_too_short\n\ntests/test_users.py:77: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1733114571378,"stop":1733114571379,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1733114571379,"stop":1733114571379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1733114571379,"stop":1733114571379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_session_faker","time":{"start":1733114571379,"stop":1733114571381,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1733114571379,"stop":1733114571379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright","time":{"start":1733114571381,"stop":1733114571870,"duration":489},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1733114571870,"stop":1733114571886,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"new_user","time":{"start":1733114571886,"stop":1733114575243,"duration":3357},"status":"passed","steps":[],"attachments":[{"uid":"560468f9f134385e","name":"API Response","source":"560468f9f134385e.txt","type":"text/plain","size":157},{"uid":"2cd0d2c86d8814dd","name":"Status Code","source":"2cd0d2c86d8814dd.txt","type":"text/plain","size":3},{"uid":"71a6086f322a5d6c","name":"Headers","source":"71a6086f322a5d6c.txt","type":"text/plain","size":648},{"uid":"759a9abf76398e77","name":"URL","source":"759a9abf76398e77.txt","type":"text/plain","size":45}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},{"name":"user_api_client","time":{"start":1733114571886,"stop":1733114571886,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Verify retrieving details for a specific user","status":"failed","statusMessage":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short","statusTrace":"self = <tests.test_users.TestUsersAPI object at 0x7f6daabb41d0>\nuser_api_client = <services.users.user_api_client.UserAPIClient object at 0x7f6daabb8d10>\nnew_user = {'avatar_url': '', 'email': 'rrobles@example.org', 'name': 'Katherine', 'nickname': '', ...}\n\n    @allure.title(\"Test get single user details\")\n    @allure.description(\"Verify retrieving details for a specific user\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_user(self, user_api_client: UserAPIClient, new_user: dict) -> None:\n        \"\"\"\n        Test getting user details by UUID.\n    \n        :param user_api_client: Instance of UserAPIClient\n        :param new_user: Fixture with a newly created user\n        \"\"\"\n        task_id = \"api-23\"\n        user_uuid = new_user[\"uuid\"]\n    \n        with allure.step(f\"Retrieving user details for UUID {user_uuid}\"):\n            user_data: dict[str, Any] = user_api_client.get_user(user_uuid, task_id)\n    \n            expected_keys = [\"avatar_url\", \"email\", \"name\", \"nickname\", \"uuid\"]\n            assert len(user_data) == len(\n                expected_keys\n            ), f\"Expected {len(expected_keys)} keys, but got {len(user_data)}\"\n            assert user_data[\"uuid\"] == user_uuid, \"UUIDs don't match\"\n    \n            try:\n>               UserResponse.model_validate(user_data)\nE               pydantic_core._pydantic_core.ValidationError: 1 validation error for UserResponse\nE               nickname\nE                 String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\nE                   For further information visit https://errors.pydantic.dev/2.10/v/string_too_short\n\ntests/test_users.py:74: ValidationError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.test_users.TestUsersAPI object at 0x7f6daabb41d0>\nuser_api_client = <services.users.user_api_client.UserAPIClient object at 0x7f6daabb8d10>\nnew_user = {'avatar_url': '', 'email': 'rrobles@example.org', 'name': 'Katherine', 'nickname': '', ...}\n\n    @allure.title(\"Test get single user details\")\n    @allure.description(\"Verify retrieving details for a specific user\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_user(self, user_api_client: UserAPIClient, new_user: dict) -> None:\n        \"\"\"\n        Test getting user details by UUID.\n    \n        :param user_api_client: Instance of UserAPIClient\n        :param new_user: Fixture with a newly created user\n        \"\"\"\n        task_id = \"api-23\"\n        user_uuid = new_user[\"uuid\"]\n    \n        with allure.step(f\"Retrieving user details for UUID {user_uuid}\"):\n            user_data: dict[str, Any] = user_api_client.get_user(user_uuid, task_id)\n    \n            expected_keys = [\"avatar_url\", \"email\", \"name\", \"nickname\", \"uuid\"]\n            assert len(user_data) == len(\n                expected_keys\n            ), f\"Expected {len(expected_keys)} keys, but got {len(user_data)}\"\n            assert user_data[\"uuid\"] == user_uuid, \"UUIDs don't match\"\n    \n            try:\n                UserResponse.model_validate(user_data)\n            except ValidationError as e:\n                msg = f\"User data validation failed: {e}\"\n>               raise AssertionError(msg) from e\nE               AssertionError: User data validation failed: 1 validation error for UserResponse\nE               nickname\nE                 String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\nE                   For further information visit https://errors.pydantic.dev/2.10/v/string_too_short\n\ntests/test_users.py:77: AssertionError","steps":[{"name":"Retrieving user details for UUID 9fc8efda-9921-432d-90ca-1a78061794da","time":{"start":1733114575244,"stop":1733114575528,"duration":284},"status":"failed","statusMessage":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short\n","statusTrace":"  File \"/home/runner/work/qa-hackathon-raptors/qa-hackathon-raptors/tests/test_users.py\", line 77, in test_get_user\n    raise AssertionError(msg) from e\n","steps":[],"attachments":[{"uid":"e0e92fdb7715812a","name":"API Response","source":"e0e92fdb7715812a.txt","type":"text/plain","size":157},{"uid":"87c4d59a96c1b9d8","name":"Status Code","source":"87c4d59a96c1b9d8.txt","type":"text/plain","size":3},{"uid":"9791213be9c8ff57","name":"Headers","source":"9791213be9c8ff57.txt","type":"text/plain","size":648},{"uid":"acc107e91bad5f20","name":"URL","source":"acc107e91bad5f20.txt","type":"text/plain","size":82}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"d31d5e1c6ea603a2","name":"log","source":"d31d5e1c6ea603a2.txt","type":"text/plain","size":68},{"uid":"a467b0bb9daf4a5c","name":"stderr","source":"a467b0bb9daf4a5c.txt","type":"text/plain","size":58}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"new_user::0","time":{"start":1733114575535,"stop":1733114576275,"duration":740},"status":"passed","steps":[],"attachments":[{"uid":"fa0c51ee876613c","name":"API Response","source":"fa0c51ee876613c.txt","type":"text/plain","size":14},{"uid":"90986b53ff3255ce","name":"Status Code","source":"90986b53ff3255ce.txt","type":"text/plain","size":3},{"uid":"4ef442516c7058d9","name":"Headers","source":"4ef442516c7058d9.txt","type":"text/plain","size":579},{"uid":"9e7f356fa248ce82","name":"URL","source":"9e7f356fa248ce82.txt","type":"text/plain","size":82}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1733114576730,"stop":1733114576736,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright::0","time":{"start":1733114576736,"stop":1733114576741,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"User API Operations"},{"name":"severity","value":"critical"},{"name":"epic","value":"User Management"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_users"},{"name":"subSuite","value":"TestUsersAPI"},{"name":"host","value":"fv-az564-111"},{"name":"thread","value":"5484-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"new_user","value":"'api-3'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":1,"skipped":0,"passed":4,"unknown":0,"total":9},"items":[{"uid":"818137283bc1b12c","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/5//#testresult/818137283bc1b12c","status":"failed","statusDetails":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short","time":{"start":1733100683988,"stop":1733100684313,"duration":325}},{"uid":"68f09eafe2984d79","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/4//#testresult/68f09eafe2984d79","status":"failed","statusDetails":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short","time":{"start":1733100076907,"stop":1733100077196,"duration":289}},{"uid":"7a1022f37ed62eda","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/4//#testresult/7a1022f37ed62eda","status":"passed","time":{"start":1733094762825,"stop":1733094763091,"duration":266}},{"uid":"87993a4922186afa","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/3//#testresult/87993a4922186afa","status":"passed","time":{"start":1733094536922,"stop":1733094537171,"duration":249}},{"uid":"99d60e51bb36c03e","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/2//#testresult/99d60e51bb36c03e","status":"passed","time":{"start":1733087327730,"stop":1733087327964,"duration":234}},{"uid":"58207e342ffa9a23","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/3//#testresult/58207e342ffa9a23","status":"failed","statusDetails":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short","time":{"start":1733086959916,"stop":1733086960153,"duration":237}},{"uid":"2873b3f998862868","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/2//#testresult/2873b3f998862868","status":"broken","statusDetails":"ValueError: Request failed with status 404","time":{"start":1733086640575,"stop":1733086640575,"duration":0}},{"uid":"c436664823acb3e0","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/1//#testresult/c436664823acb3e0","status":"passed","time":{"start":1733085914987,"stop":1733085915252,"duration":265}}]},"tags":[]},"source":"e18a52bf132fabf8.json","parameterValues":["'api-3'"]}