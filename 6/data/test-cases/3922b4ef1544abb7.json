{"uid":"3922b4ef1544abb7","name":"Test getting a specific game by UUID","fullName":"tests.test_games.TestGamesAPI#test_get_game","historyId":"079bfb9d99b274f4ed772135b09fb885","time":{"start":1733114575155,"stop":1733114575473,"duration":318},"description":"Verify retrieving game details by its UUID","descriptionHtml":"<p>Verify retrieving game details by its UUID</p>\n","status":"broken","statusMessage":"ValueError: Request failed with status 404","statusTrace":"self = <tests.test_games.TestGamesAPI object at 0x7f407e103e60>\ngame_api_client = <services.games.games_api_client.GamesAPIClient object at 0x7f40764c6450>\n\n    @allure.title(\"Test getting a specific game by UUID\")\n    @allure.description(\"Verify retrieving game details by its UUID\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_game(self, game_api_client: GamesAPIClient) -> None:\n        \"\"\"\n        Test getting a specific game by UUID.\n    \n        :param game_api_client: Instance of GamesAPIClient\n        \"\"\"\n        task_id = \"api-9\"\n        game_uuid = \"03dbad48-ad81-433d-9901-dd5332f5d9ee\"\n    \n        with allure.step(f\"Retrieving game details for UUID {game_uuid}\"):\n>           game_data = game_api_client.get_game(game_uuid, task_id)\n\ntests/test_games.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.games.games_api_client.GamesAPIClient object at 0x7f40764c6450>\ngame_uuid = '03dbad48-ad81-433d-9901-dd5332f5d9ee', task_id = 'api-9'\n\n    def get_game(self, game_uuid: str, task_id: str) -> dict[str, Any]:\n        \"\"\"Getting game details by UUID.\"\"\"\n        headers = {\"X-Task-Id\": task_id}\n        endpoint = f\"{GAMES_ENDPOINT}/{game_uuid}\"\n        response = self.get(endpoint, headers=headers)\n    \n        if not response.ok:\n            msg = f\"Request failed with status {response.status}\"\n>           raise ValueError(msg)\nE           ValueError: Request failed with status 404\n\nservices/games/games_api_client.py:63: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_output_dir","time":{"start":1733114571374,"stop":1733114571374,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1733114571374,"stop":1733114571374,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1733114571375,"stop":1733114571375,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1733114571375,"stop":1733114571375,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_session_faker","time":{"start":1733114571375,"stop":1733114571377,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright","time":{"start":1733114571377,"stop":1733114571862,"duration":485},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1733114571862,"stop":1733114571886,"duration":24},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"game_api_client","time":{"start":1733114575154,"stop":1733114575154,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Verify retrieving game details by its UUID","status":"broken","statusMessage":"ValueError: Request failed with status 404","statusTrace":"self = <tests.test_games.TestGamesAPI object at 0x7f407e103e60>\ngame_api_client = <services.games.games_api_client.GamesAPIClient object at 0x7f40764c6450>\n\n    @allure.title(\"Test getting a specific game by UUID\")\n    @allure.description(\"Verify retrieving game details by its UUID\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_game(self, game_api_client: GamesAPIClient) -> None:\n        \"\"\"\n        Test getting a specific game by UUID.\n    \n        :param game_api_client: Instance of GamesAPIClient\n        \"\"\"\n        task_id = \"api-9\"\n        game_uuid = \"03dbad48-ad81-433d-9901-dd5332f5d9ee\"\n    \n        with allure.step(f\"Retrieving game details for UUID {game_uuid}\"):\n>           game_data = game_api_client.get_game(game_uuid, task_id)\n\ntests/test_games.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.games.games_api_client.GamesAPIClient object at 0x7f40764c6450>\ngame_uuid = '03dbad48-ad81-433d-9901-dd5332f5d9ee', task_id = 'api-9'\n\n    def get_game(self, game_uuid: str, task_id: str) -> dict[str, Any]:\n        \"\"\"Getting game details by UUID.\"\"\"\n        headers = {\"X-Task-Id\": task_id}\n        endpoint = f\"{GAMES_ENDPOINT}/{game_uuid}\"\n        response = self.get(endpoint, headers=headers)\n    \n        if not response.ok:\n            msg = f\"Request failed with status {response.status}\"\n>           raise ValueError(msg)\nE           ValueError: Request failed with status 404\n\nservices/games/games_api_client.py:63: ValueError","steps":[{"name":"Retrieving game details for UUID 03dbad48-ad81-433d-9901-dd5332f5d9ee","time":{"start":1733114575155,"stop":1733114575473,"duration":318},"status":"broken","statusMessage":"ValueError: Request failed with status 404\n","statusTrace":"  File \"/home/runner/work/qa-hackathon-raptors/qa-hackathon-raptors/tests/test_games.py\", line 80, in test_get_game\n    game_data = game_api_client.get_game(game_uuid, task_id)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-hackathon-raptors/qa-hackathon-raptors/services/games/games_api_client.py\", line 63, in get_game\n    raise ValueError(msg)\n","steps":[],"attachments":[{"uid":"fa5c240e4b58eb0f","name":"API Response","source":"fa5c240e4b58eb0f.txt","type":"text/plain","size":109},{"uid":"2f97b659f827881f","name":"Status Code","source":"2f97b659f827881f.txt","type":"text/plain","size":3},{"uid":"c0e548e0a0f9f0bc","name":"Headers","source":"c0e548e0a0f9f0bc.txt","type":"text/plain","size":566},{"uid":"37ee59f9dd9b7a97","name":"URL","source":"37ee59f9dd9b7a97.txt","type":"text/plain","size":82}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"api_request_context::0","time":{"start":1733114577634,"stop":1733114577639,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright::0","time":{"start":1733114577639,"stop":1733114577644,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Game Management"},{"name":"feature","value":"Game Search API"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_games"},{"name":"subSuite","value":"TestGamesAPI"},{"name":"host","value":"fv-az564-111"},{"name":"thread","value":"5481-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_games"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":1,"unknown":0,"total":4},"items":[{"uid":"fbc0ebd20f754153","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/5//#testresult/fbc0ebd20f754153","status":"broken","statusDetails":"ValueError: Request failed with status 404","time":{"start":1733100682112,"stop":1733100682363,"duration":251}},{"uid":"2db1f2a8e5de99a9","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/4//#testresult/2db1f2a8e5de99a9","status":"broken","statusDetails":"ValueError: Request failed with status 404","time":{"start":1733100074926,"stop":1733100075254,"duration":328}},{"uid":"d52aa4f663bab0f2","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/4//#testresult/d52aa4f663bab0f2","status":"passed","time":{"start":1733094760491,"stop":1733094760842,"duration":351}}]},"tags":[]},"source":"3922b4ef1544abb7.json","parameterValues":[]}