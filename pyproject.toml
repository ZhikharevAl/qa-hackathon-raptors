# pyproject.toml
[tool.ruff]
# General settings
line-length = 88
target-version = "py312"

# Settings for formatting
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Lint settings
[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D203",  # one-blank-line-before-class
    "D212",  # multi-line-summary-first-line
    "D100",  # missing-docstring-in-public-module
    "S101",  # assert
    "PLR2004", # magic-value-comparison
    "COM812", # missing-trailing-comma
    "ISC001", # single-line-implicit-string-concatenation
    "N812", # Lowercase `expected_conditions` imported as non-lowercase
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
    "PGH003", # use specific rule codes when ignoring type issues
    "S105", # hard-coded password
]
fixable = ["ALL"]
unfixable = []

# Difficulty Settings
[tool.ruff.lint.mccabe]
max-complexity = 10

# Docstrings settings
[tool.ruff.lint.pydocstyle]
convention = "google"

# Ignoring rules for specific files
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["S101"]  # Allow the use of assert in tests

# Import Settings
[tool.ruff.lint.isort]
known-third-party = ["pytest", "playwright"]

# Pylint Settings
[tool.ruff.lint.pylint]
max-args = 5
max-returns = 3
max-statements = 50
max-branches = 12

# Pytest style Settings
[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

# Bugbear Settings
[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["pytest.mark.parametrize"]

# Naming Settings
[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["classmethod", "pytest.fixture"]
