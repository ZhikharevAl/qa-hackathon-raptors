{"uid":"c182da1619058cb2","name":"Test get single user details","fullName":"tests.test_users.TestUsersAPI#test_get_user","historyId":"14f75fd339797ae4c852920709775668","time":{"start":1733115635760,"stop":1733115636164,"duration":404},"description":"Verify retrieving details for a specific user","descriptionHtml":"<p>Verify retrieving details for a specific user</p>\n","status":"failed","statusMessage":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short","statusTrace":"self = <tests.test_users.TestUsersAPI object at 0x7f99cbed3560>\nuser_api_client = <services.users.user_api_client.UserAPIClient object at 0x7f99cbf0a600>\nnew_user = {'avatar_url': '', 'email': 'longangela@example.net', 'name': 'Jennifer', 'nickname': '', ...}\n\n    @allure.title(\"Test get single user details\")\n    @allure.description(\"Verify retrieving details for a specific user\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_user(self, user_api_client: UserAPIClient, new_user: dict) -> None:\n        \"\"\"\n        Test getting user details by UUID.\n    \n        :param user_api_client: Instance of UserAPIClient\n        :param new_user: Fixture with a newly created user\n        \"\"\"\n        task_id = \"api-23\"\n        user_uuid = new_user[\"uuid\"]\n    \n        with allure.step(f\"Retrieving user details for UUID {user_uuid}\"):\n            user_data: dict[str, Any] = user_api_client.get_user(user_uuid, task_id)\n    \n            expected_keys = [\"avatar_url\", \"email\", \"name\", \"nickname\", \"uuid\"]\n            assert len(user_data) == len(\n                expected_keys\n            ), f\"Expected {len(expected_keys)} keys, but got {len(user_data)}\"\n            assert user_data[\"uuid\"] == user_uuid, \"UUIDs don't match\"\n    \n            try:\n>               UserResponse.model_validate(user_data)\nE               pydantic_core._pydantic_core.ValidationError: 1 validation error for UserResponse\nE               nickname\nE                 String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\nE                   For further information visit https://errors.pydantic.dev/2.10/v/string_too_short\n\ntests/test_users.py:74: ValidationError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.test_users.TestUsersAPI object at 0x7f99cbed3560>\nuser_api_client = <services.users.user_api_client.UserAPIClient object at 0x7f99cbf0a600>\nnew_user = {'avatar_url': '', 'email': 'longangela@example.net', 'name': 'Jennifer', 'nickname': '', ...}\n\n    @allure.title(\"Test get single user details\")\n    @allure.description(\"Verify retrieving details for a specific user\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_user(self, user_api_client: UserAPIClient, new_user: dict) -> None:\n        \"\"\"\n        Test getting user details by UUID.\n    \n        :param user_api_client: Instance of UserAPIClient\n        :param new_user: Fixture with a newly created user\n        \"\"\"\n        task_id = \"api-23\"\n        user_uuid = new_user[\"uuid\"]\n    \n        with allure.step(f\"Retrieving user details for UUID {user_uuid}\"):\n            user_data: dict[str, Any] = user_api_client.get_user(user_uuid, task_id)\n    \n            expected_keys = [\"avatar_url\", \"email\", \"name\", \"nickname\", \"uuid\"]\n            assert len(user_data) == len(\n                expected_keys\n            ), f\"Expected {len(expected_keys)} keys, but got {len(user_data)}\"\n            assert user_data[\"uuid\"] == user_uuid, \"UUIDs don't match\"\n    \n            try:\n                UserResponse.model_validate(user_data)\n            except ValidationError as e:\n                msg = f\"User data validation failed: {e}\"\n>               raise AssertionError(msg) from e\nE               AssertionError: User data validation failed: 1 validation error for UserResponse\nE               nickname\nE                 String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\nE                   For further information visit https://errors.pydantic.dev/2.10/v/string_too_short\n\ntests/test_users.py:77: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1733115630864,"stop":1733115630864,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_session_faker","time":{"start":1733115630864,"stop":1733115630865,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1733115630864,"stop":1733115630864,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1733115630864,"stop":1733115630864,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1733115630864,"stop":1733115630864,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright","time":{"start":1733115630866,"stop":1733115631104,"duration":238},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1733115631104,"stop":1733115631112,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"new_user","time":{"start":1733115635213,"stop":1733115635760,"duration":547},"status":"passed","steps":[],"attachments":[{"uid":"70699658f6fe67be","name":"API Response","source":"70699658f6fe67be.txt","type":"text/plain","size":159},{"uid":"bec57023df65222e","name":"Status Code","source":"bec57023df65222e.txt","type":"text/plain","size":3},{"uid":"382387564f7cb116","name":"Headers","source":"382387564f7cb116.txt","type":"text/plain","size":648},{"uid":"32835d8d4dd655eb","name":"URL","source":"32835d8d4dd655eb.txt","type":"text/plain","size":45}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},{"name":"user_api_client","time":{"start":1733115635213,"stop":1733115635213,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Verify retrieving details for a specific user","status":"failed","statusMessage":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short","statusTrace":"self = <tests.test_users.TestUsersAPI object at 0x7f99cbed3560>\nuser_api_client = <services.users.user_api_client.UserAPIClient object at 0x7f99cbf0a600>\nnew_user = {'avatar_url': '', 'email': 'longangela@example.net', 'name': 'Jennifer', 'nickname': '', ...}\n\n    @allure.title(\"Test get single user details\")\n    @allure.description(\"Verify retrieving details for a specific user\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_user(self, user_api_client: UserAPIClient, new_user: dict) -> None:\n        \"\"\"\n        Test getting user details by UUID.\n    \n        :param user_api_client: Instance of UserAPIClient\n        :param new_user: Fixture with a newly created user\n        \"\"\"\n        task_id = \"api-23\"\n        user_uuid = new_user[\"uuid\"]\n    \n        with allure.step(f\"Retrieving user details for UUID {user_uuid}\"):\n            user_data: dict[str, Any] = user_api_client.get_user(user_uuid, task_id)\n    \n            expected_keys = [\"avatar_url\", \"email\", \"name\", \"nickname\", \"uuid\"]\n            assert len(user_data) == len(\n                expected_keys\n            ), f\"Expected {len(expected_keys)} keys, but got {len(user_data)}\"\n            assert user_data[\"uuid\"] == user_uuid, \"UUIDs don't match\"\n    \n            try:\n>               UserResponse.model_validate(user_data)\nE               pydantic_core._pydantic_core.ValidationError: 1 validation error for UserResponse\nE               nickname\nE                 String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\nE                   For further information visit https://errors.pydantic.dev/2.10/v/string_too_short\n\ntests/test_users.py:74: ValidationError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.test_users.TestUsersAPI object at 0x7f99cbed3560>\nuser_api_client = <services.users.user_api_client.UserAPIClient object at 0x7f99cbf0a600>\nnew_user = {'avatar_url': '', 'email': 'longangela@example.net', 'name': 'Jennifer', 'nickname': '', ...}\n\n    @allure.title(\"Test get single user details\")\n    @allure.description(\"Verify retrieving details for a specific user\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_user(self, user_api_client: UserAPIClient, new_user: dict) -> None:\n        \"\"\"\n        Test getting user details by UUID.\n    \n        :param user_api_client: Instance of UserAPIClient\n        :param new_user: Fixture with a newly created user\n        \"\"\"\n        task_id = \"api-23\"\n        user_uuid = new_user[\"uuid\"]\n    \n        with allure.step(f\"Retrieving user details for UUID {user_uuid}\"):\n            user_data: dict[str, Any] = user_api_client.get_user(user_uuid, task_id)\n    \n            expected_keys = [\"avatar_url\", \"email\", \"name\", \"nickname\", \"uuid\"]\n            assert len(user_data) == len(\n                expected_keys\n            ), f\"Expected {len(expected_keys)} keys, but got {len(user_data)}\"\n            assert user_data[\"uuid\"] == user_uuid, \"UUIDs don't match\"\n    \n            try:\n                UserResponse.model_validate(user_data)\n            except ValidationError as e:\n                msg = f\"User data validation failed: {e}\"\n>               raise AssertionError(msg) from e\nE               AssertionError: User data validation failed: 1 validation error for UserResponse\nE               nickname\nE                 String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\nE                   For further information visit https://errors.pydantic.dev/2.10/v/string_too_short\n\ntests/test_users.py:77: AssertionError","steps":[{"name":"Retrieving user details for UUID 917960ca-2c1e-43d7-a90c-51bfdd39d8d7","time":{"start":1733115635760,"stop":1733115636163,"duration":403},"status":"failed","statusMessage":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short\n","statusTrace":"  File \"/home/runner/work/qa-hackathon-raptors/qa-hackathon-raptors/tests/test_users.py\", line 77, in test_get_user\n    raise AssertionError(msg) from e\n","steps":[],"attachments":[{"uid":"4ed33638b1b2ecfc","name":"API Response","source":"4ed33638b1b2ecfc.txt","type":"text/plain","size":159},{"uid":"1d56f747f93085b","name":"Status Code","source":"1d56f747f93085b.txt","type":"text/plain","size":3},{"uid":"32e573a5a4fd3ed5","name":"Headers","source":"32e573a5a4fd3ed5.txt","type":"text/plain","size":648},{"uid":"9664441dc5ede643","name":"URL","source":"9664441dc5ede643.txt","type":"text/plain","size":82}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"new_user::0","time":{"start":1733115636169,"stop":1733115636970,"duration":801},"status":"passed","steps":[],"attachments":[{"uid":"88299c6df40359e6","name":"API Response","source":"88299c6df40359e6.txt","type":"text/plain","size":14},{"uid":"5aa1dd07d48a64c6","name":"Status Code","source":"5aa1dd07d48a64c6.txt","type":"text/plain","size":3},{"uid":"a1e2568de4a780a4","name":"Headers","source":"a1e2568de4a780a4.txt","type":"text/plain","size":579},{"uid":"26afea1856d2a125","name":"URL","source":"26afea1856d2a125.txt","type":"text/plain","size":82}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1733115650121,"stop":1733115650124,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright::0","time":{"start":1733115650124,"stop":1733115650130,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"User API Operations"},{"name":"epic","value":"User Management"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_users"},{"name":"subSuite","value":"TestUsersAPI"},{"name":"host","value":"fv-az1437-820"},{"name":"thread","value":"5520-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"new_user","value":"'api-3'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":1,"skipped":0,"passed":7,"unknown":0,"total":13},"items":[{"uid":"23254a21f9347bac","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/7//#testresult/23254a21f9347bac","status":"passed","time":{"start":1733115448044,"stop":1733115448365,"duration":321}},{"uid":"24c98417e1ef1325","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/6//#testresult/24c98417e1ef1325","status":"passed","time":{"start":1733114762802,"stop":1733114763071,"duration":269}},{"uid":"adc7b1157bb240a7","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/5//#testresult/adc7b1157bb240a7","status":"passed","time":{"start":1733114594575,"stop":1733114594947,"duration":372}},{"uid":"e18a52bf132fabf8","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/6//#testresult/e18a52bf132fabf8","status":"failed","statusDetails":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short","time":{"start":1733114575244,"stop":1733114575528,"duration":284}},{"uid":"818137283bc1b12c","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/5//#testresult/818137283bc1b12c","status":"failed","statusDetails":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short","time":{"start":1733100683988,"stop":1733100684313,"duration":325}},{"uid":"68f09eafe2984d79","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/4//#testresult/68f09eafe2984d79","status":"failed","statusDetails":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short","time":{"start":1733100076907,"stop":1733100077196,"duration":289}},{"uid":"7a1022f37ed62eda","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/4//#testresult/7a1022f37ed62eda","status":"passed","time":{"start":1733094762825,"stop":1733094763091,"duration":266}},{"uid":"87993a4922186afa","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/3//#testresult/87993a4922186afa","status":"passed","time":{"start":1733094536922,"stop":1733094537171,"duration":249}},{"uid":"99d60e51bb36c03e","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/2//#testresult/99d60e51bb36c03e","status":"passed","time":{"start":1733087327730,"stop":1733087327964,"duration":234}},{"uid":"58207e342ffa9a23","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/3//#testresult/58207e342ffa9a23","status":"failed","statusDetails":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short","time":{"start":1733086959916,"stop":1733086960153,"duration":237}},{"uid":"2873b3f998862868","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/2//#testresult/2873b3f998862868","status":"broken","statusDetails":"ValueError: Request failed with status 404","time":{"start":1733086640575,"stop":1733086640575,"duration":0}},{"uid":"c436664823acb3e0","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/1//#testresult/c436664823acb3e0","status":"passed","time":{"start":1733085914987,"stop":1733085915252,"duration":265}}]},"tags":[]},"source":"c182da1619058cb2.json","parameterValues":["'api-3'"]}