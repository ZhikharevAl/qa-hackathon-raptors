{"uid":"7577d11208297624","name":"Test search games with specific title","fullName":"tests.test_games.TestGamesAPI#test_search_games","historyId":"bf43f1ad52f8a4de9b39475a73852f3b","time":{"start":1733116750618,"stop":1733116752072,"duration":1454},"description":"Verify retrieving games with the same title (case-insensitive)","descriptionHtml":"<p>Verify retrieving games with the same title (case-insensitive)</p>\n","status":"failed","statusMessage":"AssertionError: ('Expected all games to have the same title (case-insensitive) Elden Ring', 'but found different titles: {\\'atomic heart\\', \"baldur\\'s gate 3\", \\'the witcher 3: wild hunt\\', \\'the sims 4\\', \\'the last of us\\', \\'red dead redemption 2\\', \\'forza horizon 5\\', \\'the elder scrolls v: skyrim\\', \"uncharted 4: a thief\\'s end\", \\'elden ring\\'}')\nassert 10 == 1\n +  where 10 = len({'atomic heart', \"baldur's gate 3\", 'elden ring', 'forza horizon 5', 'red dead redemption 2', 'the elder scrolls v: skyrim', ...})","statusTrace":"self = <tests.test_games.TestGamesAPI object at 0x7feaf36eca70>\ngame_api_client = <services.games.games_api_client.GamesAPIClient object at 0x7feaf34096d0>\n\n    @allure.title(\"Test search games with specific title\")\n    @allure.description(\n        \"Verify retrieving games with the same title (case-insensitive)\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_search_games(self, game_api_client: GamesAPIClient) -> None:\n        \"\"\"\n        Test getting a list of games with the same title (case-insensitive).\n    \n        :param game_api_client: Instance of GamesAPIClient\n        \"\"\"\n        task_id = \"api-2\"\n        specific_game_name = \"Elden Ring\"\n    \n        with allure.step(f\"Searching for games with title '{specific_game_name}'\"):\n            response_data = game_api_client.search_games(\n                task_id=task_id, query=specific_game_name\n            )\n    \n            try:\n                validated_response = GamesResponse.model_validate(response_data)\n            except Exception as e:\n                msg = f\"Response validation failed: {e}\"\n                raise AssertionError(msg) from e\n    \n            with allure.step(\"Checking game titles consistency\"):\n                game_titles = {game.title.lower() for game in validated_response.games}\n>               assert len(game_titles) == 1, (\n                    f\"Expected all games to have the same title (case-insensitive) \"\n                    f\"{specific_game_name}\",\n                    f\"but found different titles: {game_titles}\",\n                )\nE               AssertionError: ('Expected all games to have the same title (case-insensitive) Elden Ring', 'but found different titles: {\\'atomic heart\\', \"baldur\\'s gate 3\", \\'the witcher 3: wild hunt\\', \\'the sims 4\\', \\'the last of us\\', \\'red dead redemption 2\\', \\'forza horizon 5\\', \\'the elder scrolls v: skyrim\\', \"uncharted 4: a thief\\'s end\", \\'elden ring\\'}')\nE               assert 10 == 1\nE                +  where 10 = len({'atomic heart', \"baldur's gate 3\", 'elden ring', 'forza horizon 5', 'red dead redemption 2', 'the elder scrolls v: skyrim', ...})\n\ntests/test_games.py:40: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1733116750373,"stop":1733116750373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1733116750373,"stop":1733116750373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_session_faker","time":{"start":1733116750373,"stop":1733116750374,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1733116750373,"stop":1733116750373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1733116750373,"stop":1733116750373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright","time":{"start":1733116750374,"stop":1733116750609,"duration":235},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1733116750610,"stop":1733116750617,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"game_api_client","time":{"start":1733116750617,"stop":1733116750617,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Verify retrieving games with the same title (case-insensitive)","status":"failed","statusMessage":"AssertionError: ('Expected all games to have the same title (case-insensitive) Elden Ring', 'but found different titles: {\\'atomic heart\\', \"baldur\\'s gate 3\", \\'the witcher 3: wild hunt\\', \\'the sims 4\\', \\'the last of us\\', \\'red dead redemption 2\\', \\'forza horizon 5\\', \\'the elder scrolls v: skyrim\\', \"uncharted 4: a thief\\'s end\", \\'elden ring\\'}')\nassert 10 == 1\n +  where 10 = len({'atomic heart', \"baldur's gate 3\", 'elden ring', 'forza horizon 5', 'red dead redemption 2', 'the elder scrolls v: skyrim', ...})","statusTrace":"self = <tests.test_games.TestGamesAPI object at 0x7feaf36eca70>\ngame_api_client = <services.games.games_api_client.GamesAPIClient object at 0x7feaf34096d0>\n\n    @allure.title(\"Test search games with specific title\")\n    @allure.description(\n        \"Verify retrieving games with the same title (case-insensitive)\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_search_games(self, game_api_client: GamesAPIClient) -> None:\n        \"\"\"\n        Test getting a list of games with the same title (case-insensitive).\n    \n        :param game_api_client: Instance of GamesAPIClient\n        \"\"\"\n        task_id = \"api-2\"\n        specific_game_name = \"Elden Ring\"\n    \n        with allure.step(f\"Searching for games with title '{specific_game_name}'\"):\n            response_data = game_api_client.search_games(\n                task_id=task_id, query=specific_game_name\n            )\n    \n            try:\n                validated_response = GamesResponse.model_validate(response_data)\n            except Exception as e:\n                msg = f\"Response validation failed: {e}\"\n                raise AssertionError(msg) from e\n    \n            with allure.step(\"Checking game titles consistency\"):\n                game_titles = {game.title.lower() for game in validated_response.games}\n>               assert len(game_titles) == 1, (\n                    f\"Expected all games to have the same title (case-insensitive) \"\n                    f\"{specific_game_name}\",\n                    f\"but found different titles: {game_titles}\",\n                )\nE               AssertionError: ('Expected all games to have the same title (case-insensitive) Elden Ring', 'but found different titles: {\\'atomic heart\\', \"baldur\\'s gate 3\", \\'the witcher 3: wild hunt\\', \\'the sims 4\\', \\'the last of us\\', \\'red dead redemption 2\\', \\'forza horizon 5\\', \\'the elder scrolls v: skyrim\\', \"uncharted 4: a thief\\'s end\", \\'elden ring\\'}')\nE               assert 10 == 1\nE                +  where 10 = len({'atomic heart', \"baldur's gate 3\", 'elden ring', 'forza horizon 5', 'red dead redemption 2', 'the elder scrolls v: skyrim', ...})\n\ntests/test_games.py:40: AssertionError","steps":[{"name":"Searching for games with title 'Elden Ring'","time":{"start":1733116750618,"stop":1733116752072,"duration":1454},"status":"failed","statusMessage":"AssertionError: ('Expected all games to have the same title (case-insensitive) Elden Ring', 'but found different titles: {\\'atomic heart\\', \"baldur\\'s gate 3\", \\'the witcher 3: wild hunt\\', \\'the sims 4\\', \\'the last of us\\', \\'red dead redemption 2\\', \\'forza horizon 5\\', \\'the elder scrolls v: skyrim\\', \"uncharted 4: a thief\\'s end\", \\'elden ring\\'}')\nassert 10 == 1\n +  where 10 = len({'atomic heart', \"baldur's gate 3\", 'elden ring', 'forza horizon 5', 'red dead redemption 2', 'the elder scrolls v: skyrim', ...})\n","statusTrace":"  File \"/home/runner/work/qa-hackathon-raptors/qa-hackathon-raptors/tests/test_games.py\", line 40, in test_search_games\n    assert len(game_titles) == 1, (\n","steps":[{"name":"Checking game titles consistency","time":{"start":1733116752071,"stop":1733116752071,"duration":0},"status":"failed","statusMessage":"AssertionError: ('Expected all games to have the same title (case-insensitive) Elden Ring', 'but found different titles: {\\'atomic heart\\', \"baldur\\'s gate 3\", \\'the witcher 3: wild hunt\\', \\'the sims 4\\', \\'the last of us\\', \\'red dead redemption 2\\', \\'forza horizon 5\\', \\'the elder scrolls v: skyrim\\', \"uncharted 4: a thief\\'s end\", \\'elden ring\\'}')\nassert 10 == 1\n +  where 10 = len({'atomic heart', \"baldur's gate 3\", 'elden ring', 'forza horizon 5', 'red dead redemption 2', 'the elder scrolls v: skyrim', ...})\n","statusTrace":"  File \"/home/runner/work/qa-hackathon-raptors/qa-hackathon-raptors/tests/test_games.py\", line 40, in test_search_games\n    assert len(game_titles) == 1, (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3fcb33103f12a300","name":"API Response","source":"3fcb33103f12a300.txt","type":"text/plain","size":2577},{"uid":"318832f46ad7929e","name":"Status Code","source":"318832f46ad7929e.txt","type":"text/plain","size":3},{"uid":"66130055acd2877","name":"Headers","source":"66130055acd2877.txt","type":"text/plain","size":703},{"uid":"77ed22798d8ddf40","name":"URL","source":"77ed22798d8ddf40.txt","type":"text/plain","size":90}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":4,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"1d151d9a9573f50a","name":"log","source":"1d151d9a9573f50a.txt","type":"text/plain","size":68},{"uid":"ace475db2551e5ed","name":"stderr","source":"ace475db2551e5ed.txt","type":"text/plain","size":58}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"api_request_context::0","time":{"start":1733116766020,"stop":1733116766023,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright::0","time":{"start":1733116766023,"stop":1733116766029,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"epic","value":"Game Management"},{"name":"feature","value":"Game Search API"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_games"},{"name":"subSuite","value":"TestGamesAPI"},{"name":"host","value":"fv-az885-149"},{"name":"thread","value":"5565-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_games"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"c28727e7972a3f1f","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/8//#testresult/c28727e7972a3f1f","status":"failed","statusDetails":"AssertionError: ('Expected all games to have the same title (case-insensitive) Elden Ring', 'but found different titles: {\\'the last of us\\', \\'red dead redemption 2\\', \\'atomic heart\\', \\'the witcher 3: wild hunt\\', \\'forza horizon 5\\', \"uncharted 4: a thief\\'s end\", \"baldur\\'s gate 3\", \\'elden ring\\', \\'the sims 4\\', \\'the elder scrolls v: skyrim\\'}')\nassert 10 == 1\n +  where 10 = len({'atomic heart', \"baldur's gate 3\", 'elden ring', 'forza horizon 5', 'red dead redemption 2', 'the elder scrolls v: skyrim', ...})","time":{"start":1733116321803,"stop":1733116323687,"duration":1884}}]},"tags":[]},"source":"7577d11208297624.json","parameterValues":[]}