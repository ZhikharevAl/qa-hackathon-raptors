{"uid":"818137283bc1b12c","name":"Test get single user details","fullName":"tests.test_users.TestUsersAPI#test_get_user","historyId":"14f75fd339797ae4c852920709775668","time":{"start":1733100683988,"stop":1733100684313,"duration":325},"description":"Verify retrieving details for a specific user","descriptionHtml":"<p>Verify retrieving details for a specific user</p>\n","status":"failed","statusMessage":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short","statusTrace":"self = <tests.test_users.TestUsersAPI object at 0x7fea51052f90>\nuser_api_client = <services.users.user_api_client.UserAPIClient object at 0x7fea51087260>\nnew_user = {'avatar_url': '', 'email': 'lisa41@example.net', 'name': 'Barbara', 'nickname': '', ...}\n\n    @allure.title(\"Test get single user details\")\n    @allure.description(\"Verify retrieving details for a specific user\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_user(self, user_api_client: UserAPIClient, new_user: dict) -> None:\n        \"\"\"\n        Test getting user details by UUID.\n    \n        :param user_api_client: Instance of UserAPIClient\n        :param new_user: Fixture with a newly created user\n        \"\"\"\n        task_id = \"api-23\"\n        user_uuid = new_user[\"uuid\"]\n    \n        with allure.step(f\"Retrieving user details for UUID {user_uuid}\"):\n            user_data: dict[str, Any] = user_api_client.get_user(user_uuid, task_id)\n    \n            expected_keys = [\"avatar_url\", \"email\", \"name\", \"nickname\", \"uuid\"]\n            assert len(user_data) == len(\n                expected_keys\n            ), f\"Expected {len(expected_keys)} keys, but got {len(user_data)}\"\n            assert user_data[\"uuid\"] == user_uuid, \"UUIDs don't match\"\n    \n            try:\n>               UserResponse.model_validate(user_data)\nE               pydantic_core._pydantic_core.ValidationError: 1 validation error for UserResponse\nE               nickname\nE                 String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\nE                   For further information visit https://errors.pydantic.dev/2.10/v/string_too_short\n\ntests/test_users.py:74: ValidationError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.test_users.TestUsersAPI object at 0x7fea51052f90>\nuser_api_client = <services.users.user_api_client.UserAPIClient object at 0x7fea51087260>\nnew_user = {'avatar_url': '', 'email': 'lisa41@example.net', 'name': 'Barbara', 'nickname': '', ...}\n\n    @allure.title(\"Test get single user details\")\n    @allure.description(\"Verify retrieving details for a specific user\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_user(self, user_api_client: UserAPIClient, new_user: dict) -> None:\n        \"\"\"\n        Test getting user details by UUID.\n    \n        :param user_api_client: Instance of UserAPIClient\n        :param new_user: Fixture with a newly created user\n        \"\"\"\n        task_id = \"api-23\"\n        user_uuid = new_user[\"uuid\"]\n    \n        with allure.step(f\"Retrieving user details for UUID {user_uuid}\"):\n            user_data: dict[str, Any] = user_api_client.get_user(user_uuid, task_id)\n    \n            expected_keys = [\"avatar_url\", \"email\", \"name\", \"nickname\", \"uuid\"]\n            assert len(user_data) == len(\n                expected_keys\n            ), f\"Expected {len(expected_keys)} keys, but got {len(user_data)}\"\n            assert user_data[\"uuid\"] == user_uuid, \"UUIDs don't match\"\n    \n            try:\n                UserResponse.model_validate(user_data)\n            except ValidationError as e:\n                msg = f\"User data validation failed: {e}\"\n>               raise AssertionError(msg) from e\nE               AssertionError: User data validation failed: 1 validation error for UserResponse\nE               nickname\nE                 String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\nE                   For further information visit https://errors.pydantic.dev/2.10/v/string_too_short\n\ntests/test_users.py:77: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_output_dir","time":{"start":1733100680164,"stop":1733100680164,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1733100680164,"stop":1733100680164,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_session_faker","time":{"start":1733100680165,"stop":1733100680166,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1733100680165,"stop":1733100680165,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1733100680165,"stop":1733100680165,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright","time":{"start":1733100680166,"stop":1733100680408,"duration":242},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1733100680409,"stop":1733100680417,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_api_client","time":{"start":1733100683495,"stop":1733100683495,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"new_user","time":{"start":1733100683495,"stop":1733100683988,"duration":493},"status":"passed","steps":[],"attachments":[{"uid":"6ce85913342aeae1","name":"API Response","source":"6ce85913342aeae1.txt","type":"text/plain","size":154},{"uid":"e9655e869bc98f8c","name":"Status Code","source":"e9655e869bc98f8c.txt","type":"text/plain","size":3},{"uid":"df1b28bad557edf2","name":"Headers","source":"df1b28bad557edf2.txt","type":"text/plain","size":648},{"uid":"c11df7f982e21830","name":"URL","source":"c11df7f982e21830.txt","type":"text/plain","size":45}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Verify retrieving details for a specific user","status":"failed","statusMessage":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short","statusTrace":"self = <tests.test_users.TestUsersAPI object at 0x7fea51052f90>\nuser_api_client = <services.users.user_api_client.UserAPIClient object at 0x7fea51087260>\nnew_user = {'avatar_url': '', 'email': 'lisa41@example.net', 'name': 'Barbara', 'nickname': '', ...}\n\n    @allure.title(\"Test get single user details\")\n    @allure.description(\"Verify retrieving details for a specific user\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_user(self, user_api_client: UserAPIClient, new_user: dict) -> None:\n        \"\"\"\n        Test getting user details by UUID.\n    \n        :param user_api_client: Instance of UserAPIClient\n        :param new_user: Fixture with a newly created user\n        \"\"\"\n        task_id = \"api-23\"\n        user_uuid = new_user[\"uuid\"]\n    \n        with allure.step(f\"Retrieving user details for UUID {user_uuid}\"):\n            user_data: dict[str, Any] = user_api_client.get_user(user_uuid, task_id)\n    \n            expected_keys = [\"avatar_url\", \"email\", \"name\", \"nickname\", \"uuid\"]\n            assert len(user_data) == len(\n                expected_keys\n            ), f\"Expected {len(expected_keys)} keys, but got {len(user_data)}\"\n            assert user_data[\"uuid\"] == user_uuid, \"UUIDs don't match\"\n    \n            try:\n>               UserResponse.model_validate(user_data)\nE               pydantic_core._pydantic_core.ValidationError: 1 validation error for UserResponse\nE               nickname\nE                 String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\nE                   For further information visit https://errors.pydantic.dev/2.10/v/string_too_short\n\ntests/test_users.py:74: ValidationError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.test_users.TestUsersAPI object at 0x7fea51052f90>\nuser_api_client = <services.users.user_api_client.UserAPIClient object at 0x7fea51087260>\nnew_user = {'avatar_url': '', 'email': 'lisa41@example.net', 'name': 'Barbara', 'nickname': '', ...}\n\n    @allure.title(\"Test get single user details\")\n    @allure.description(\"Verify retrieving details for a specific user\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_user(self, user_api_client: UserAPIClient, new_user: dict) -> None:\n        \"\"\"\n        Test getting user details by UUID.\n    \n        :param user_api_client: Instance of UserAPIClient\n        :param new_user: Fixture with a newly created user\n        \"\"\"\n        task_id = \"api-23\"\n        user_uuid = new_user[\"uuid\"]\n    \n        with allure.step(f\"Retrieving user details for UUID {user_uuid}\"):\n            user_data: dict[str, Any] = user_api_client.get_user(user_uuid, task_id)\n    \n            expected_keys = [\"avatar_url\", \"email\", \"name\", \"nickname\", \"uuid\"]\n            assert len(user_data) == len(\n                expected_keys\n            ), f\"Expected {len(expected_keys)} keys, but got {len(user_data)}\"\n            assert user_data[\"uuid\"] == user_uuid, \"UUIDs don't match\"\n    \n            try:\n                UserResponse.model_validate(user_data)\n            except ValidationError as e:\n                msg = f\"User data validation failed: {e}\"\n>               raise AssertionError(msg) from e\nE               AssertionError: User data validation failed: 1 validation error for UserResponse\nE               nickname\nE                 String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\nE                   For further information visit https://errors.pydantic.dev/2.10/v/string_too_short\n\ntests/test_users.py:77: AssertionError","steps":[{"name":"Retrieving user details for UUID 7bf47ac3-a760-45ea-9259-d0070650db35","time":{"start":1733100683988,"stop":1733100684312,"duration":324},"status":"failed","statusMessage":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short\n","statusTrace":"  File \"/home/runner/work/qa-hackathon-raptors/qa-hackathon-raptors/tests/test_users.py\", line 77, in test_get_user\n    raise AssertionError(msg) from e\n","steps":[],"attachments":[{"uid":"6d41f84f0733e2ef","name":"API Response","source":"6d41f84f0733e2ef.txt","type":"text/plain","size":154},{"uid":"6def065acb4207db","name":"Status Code","source":"6def065acb4207db.txt","type":"text/plain","size":3},{"uid":"fa0555a3ac8604d1","name":"Headers","source":"fa0555a3ac8604d1.txt","type":"text/plain","size":648},{"uid":"fec97de3923996c4","name":"URL","source":"fec97de3923996c4.txt","type":"text/plain","size":82}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"new_user::0","time":{"start":1733100684318,"stop":1733100685172,"duration":854},"status":"passed","steps":[],"attachments":[{"uid":"2c6316fdf2d7f062","name":"API Response","source":"2c6316fdf2d7f062.txt","type":"text/plain","size":14},{"uid":"6c2e6db6d37848","name":"Status Code","source":"6c2e6db6d37848.txt","type":"text/plain","size":3},{"uid":"85d4e8ebb8b164df","name":"Headers","source":"85d4e8ebb8b164df.txt","type":"text/plain","size":579},{"uid":"b3712f98bf20b36f","name":"URL","source":"b3712f98bf20b36f.txt","type":"text/plain","size":82}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1733100688522,"stop":1733100688525,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright::0","time":{"start":1733100688526,"stop":1733100688531,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"User Management"},{"name":"severity","value":"critical"},{"name":"feature","value":"User API Operations"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_users"},{"name":"subSuite","value":"TestUsersAPI"},{"name":"host","value":"fv-az1110-191"},{"name":"thread","value":"5529-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"new_user","value":"'api-3'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":1,"skipped":0,"passed":4,"unknown":0,"total":8},"items":[{"uid":"68f09eafe2984d79","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/4//#testresult/68f09eafe2984d79","status":"failed","statusDetails":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short","time":{"start":1733100076907,"stop":1733100077196,"duration":289}},{"uid":"7a1022f37ed62eda","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/4//#testresult/7a1022f37ed62eda","status":"passed","time":{"start":1733094762825,"stop":1733094763091,"duration":266}},{"uid":"87993a4922186afa","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/3//#testresult/87993a4922186afa","status":"passed","time":{"start":1733094536922,"stop":1733094537171,"duration":249}},{"uid":"99d60e51bb36c03e","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/2//#testresult/99d60e51bb36c03e","status":"passed","time":{"start":1733087327730,"stop":1733087327964,"duration":234}},{"uid":"58207e342ffa9a23","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/3//#testresult/58207e342ffa9a23","status":"failed","statusDetails":"AssertionError: User data validation failed: 1 validation error for UserResponse\nnickname\n  String should have at least 2 characters [type=string_too_short, input_value='', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_too_short","time":{"start":1733086959916,"stop":1733086960153,"duration":237}},{"uid":"2873b3f998862868","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/2//#testresult/2873b3f998862868","status":"broken","statusDetails":"ValueError: Request failed with status 404","time":{"start":1733086640575,"stop":1733086640575,"duration":0}},{"uid":"c436664823acb3e0","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/1//#testresult/c436664823acb3e0","status":"passed","time":{"start":1733085914987,"stop":1733085915252,"duration":265}}]},"tags":[]},"source":"818137283bc1b12c.json","parameterValues":["'api-3'"]}