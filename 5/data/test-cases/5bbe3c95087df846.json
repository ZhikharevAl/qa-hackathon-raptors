{"uid":"5bbe3c95087df846","name":"Test get single user details","fullName":"tests.test_users.TestUsersAPI#test_get_user","historyId":"1ccebb730cb451f2cae3f4c861042f35","time":{"start":1733100685173,"stop":1733100685173,"duration":0},"description":"Verify retrieving details for a specific user","descriptionHtml":"<p>Verify retrieving details for a specific user</p>\n","status":"broken","statusMessage":"ValueError: Request failed with status 500","statusTrace":"user_api_client = <services.users.user_api_client.UserAPIClient object at 0x7fea51081520>\nrequest = <SubRequest 'new_user' for <Function test_get_user[api-22]>>\n\n    @pytest.fixture(params=[\"api-3\", \"api-22\"])\n    def new_user(\n        user_api_client: UserAPIClient, request: pytest.FixtureRequest\n    ) -> Generator[dict[str, Any], Any, None]:\n        \"\"\"\n        A fixture for creating a new user that will be automatically deleted after the test.\n    \n        :param user_api_client: A client for working with the user API\n        :param request: Fixture request object, used for parametrization\n        \"\"\"\n        task_id = request.param\n>       user = user_api_client.create_user(task_id)\n\nconftest.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.users.user_api_client.UserAPIClient object at 0x7fea51081520>\ntask_id = 'api-22'\n\n    def create_user(self, task_id: str) -> dict[str, Any]:\n        \"\"\"\n        Creating a new user.\n    \n        :param task_id: Task ID\n        :return: Full API Response\n        \"\"\"\n        headers = {\"X-Task-Id\": task_id}\n        response = self.post(\n            USERS_ENDPOINT, headers=headers, json=self.payloads.create_user\n        )\n    \n        if not response.ok:\n            msg = f\"Request failed with status {response.status}\"\n>           raise ValueError(msg)\nE           ValueError: Request failed with status 500\n\nservices/users/user_api_client.py:87: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_output_dir","time":{"start":1733100680164,"stop":1733100680164,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1733100680164,"stop":1733100680164,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_session_faker","time":{"start":1733100680165,"stop":1733100680166,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1733100680165,"stop":1733100680165,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1733100680165,"stop":1733100680165,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright","time":{"start":1733100680166,"stop":1733100680408,"duration":242},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1733100680409,"stop":1733100680417,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_api_client","time":{"start":1733100685174,"stop":1733100685174,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"new_user","time":{"start":1733100685174,"stop":1733100685418,"duration":244},"status":"broken","statusMessage":"ValueError: Request failed with status 500\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-hackathon-raptors/qa-hackathon-raptors/conftest.py\", line 58, in new_user\n    user = user_api_client.create_user(task_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-hackathon-raptors/qa-hackathon-raptors/services/users/user_api_client.py\", line 87, in create_user\n    raise ValueError(msg)\n","steps":[],"attachments":[{"uid":"680042020facbd67","name":"API Response","source":"680042020facbd67.txt","type":"text/plain","size":59},{"uid":"c7ce91ec1cb86b21","name":"Status Code","source":"c7ce91ec1cb86b21.txt","type":"text/plain","size":3},{"uid":"ce1dd02876aa8be9","name":"Headers","source":"ce1dd02876aa8be9.txt","type":"text/plain","size":566},{"uid":"9b5582d362d4fbff","name":"URL","source":"9b5582d362d4fbff.txt","type":"text/plain","size":45}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"api_request_context::0","time":{"start":1733100688522,"stop":1733100688525,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright::0","time":{"start":1733100688526,"stop":1733100688531,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"User Management"},{"name":"severity","value":"critical"},{"name":"feature","value":"User API Operations"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_users"},{"name":"subSuite","value":"TestUsersAPI"},{"name":"host","value":"fv-az1110-191"},{"name":"thread","value":"5529-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"new_user","value":"'api-22'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":4,"unknown":0,"total":8},"items":[{"uid":"c5d8d36bf259be15","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/4//#testresult/c5d8d36bf259be15","status":"broken","statusDetails":"ValueError: Request failed with status 500","time":{"start":1733100078206,"stop":1733100078206,"duration":0}},{"uid":"c39418ea3450b048","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/4//#testresult/c39418ea3450b048","status":"passed","time":{"start":1733094764149,"stop":1733094764403,"duration":254}},{"uid":"7a2408d7e7af1e87","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/3//#testresult/7a2408d7e7af1e87","status":"passed","time":{"start":1733094538652,"stop":1733094538915,"duration":263}},{"uid":"90642a9061be947","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/2//#testresult/90642a9061be947","status":"passed","time":{"start":1733087329040,"stop":1733087329273,"duration":233}},{"uid":"b137c2c79f9dc141","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/3//#testresult/b137c2c79f9dc141","status":"broken","statusDetails":"ValueError: Request failed with status 500","time":{"start":1733086960860,"stop":1733086960860,"duration":0}},{"uid":"865d0f7af6ac561b","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/2//#testresult/865d0f7af6ac561b","status":"broken","statusDetails":"ValueError: Request failed with status 404","time":{"start":1733086640741,"stop":1733086640741,"duration":0}},{"uid":"ea3ed084793089b","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/1//#testresult/ea3ed084793089b","status":"passed","time":{"start":1733085916284,"stop":1733085916589,"duration":305}}]},"tags":[]},"source":"5bbe3c95087df846.json","parameterValues":["'api-22'"]}