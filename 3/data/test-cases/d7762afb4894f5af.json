{"uid":"d7762afb4894f5af","name":"Test delete user","fullName":"tests.test_users.TestUsersAPI#test_delete_user","historyId":"7b654ab091ab3d25dbc8f38487d0174d","time":{"start":1733086961408,"stop":1733086961602,"duration":194},"description":"Verify deleting a single user by UUID","descriptionHtml":"<p>Verify deleting a single user by UUID</p>\n","status":"broken","statusMessage":"ValueError: Request failed with status 500","statusTrace":"self = <tests.test_users.TestUsersAPI object at 0x7f75ce7840b0>\nuser_api_client = <services.users.user_api_client.UserAPIClient object at 0x7f75cea42b40>\nnew_user = {'avatar_url': '', 'email': 'todd80@example.com', 'name': 'Anna', 'nickname': '', ...}\n\n    @allure.title(\"Test delete user\")\n    @allure.description(\"Verify deleting a single user by UUID\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_delete_user(self, user_api_client: UserAPIClient, new_user: dict) -> None:\n        \"\"\"\n        Test deleting a single user by UUID.\n    \n        :param user_api_client: Instance of UserAPIClient\n        :param new_user: Fixture with a newly created user\n        \"\"\"\n        task_id = \"api-1\"\n        user_uuid = new_user[\"uuid\"]\n    \n        with allure.step(f\"Deleting user with UUID {user_uuid}\"):\n>           response_data = user_api_client.delete_user(user_uuid, task_id)\n\ntests/test_users.py:93: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.users.user_api_client.UserAPIClient object at 0x7f75cea42b40>\nuser_uuid = 'cedb6ca0-8471-4c9f-95b5-bdaceb3f733a', task_id = 'api-1'\n\n    def delete_user(self, user_uuid: str, task_id: str) -> dict[str, Any]:\n        \"\"\"\n        Deleting a single user by UUID.\n    \n        :param user_uuid: The UUID of the user to delete\n        :param task_id: Task ID\n        :return: Full API Response\n        \"\"\"\n        headers = {\"X-Task-Id\": task_id}\n        endpoint = f\"{USERS_ENDPOINT}/{user_uuid}\"\n        response = self.delete(endpoint, headers=headers)\n    \n        if not response.ok:\n            msg = f\"Request failed with status {response.status}\"\n>           raise ValueError(msg)\nE           ValueError: Request failed with status 500\n\nservices/users/user_api_client.py:69: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1733086956518,"stop":1733086956518,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1733086956519,"stop":1733086956519,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1733086956519,"stop":1733086956519,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_session_faker","time":{"start":1733086956519,"stop":1733086956520,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1733086956519,"stop":1733086956519,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright","time":{"start":1733086956520,"stop":1733086956756,"duration":236},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1733086956756,"stop":1733086956764,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_api_client","time":{"start":1733086961047,"stop":1733086961047,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"new_user","time":{"start":1733086961047,"stop":1733086961408,"duration":361},"status":"passed","steps":[],"attachments":[{"uid":"6f7e8ad8b5f861a5","name":"API Response","source":"6f7e8ad8b5f861a5.txt","type":"text/plain","size":151},{"uid":"3f8a21b9a3c605a3","name":"Status Code","source":"3f8a21b9a3c605a3.txt","type":"text/plain","size":3},{"uid":"22294118951b4a03","name":"Headers","source":"22294118951b4a03.txt","type":"text/plain","size":648},{"uid":"10e5a7376b16050d","name":"URL","source":"10e5a7376b16050d.txt","type":"text/plain","size":45}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Verify deleting a single user by UUID","status":"broken","statusMessage":"ValueError: Request failed with status 500","statusTrace":"self = <tests.test_users.TestUsersAPI object at 0x7f75ce7840b0>\nuser_api_client = <services.users.user_api_client.UserAPIClient object at 0x7f75cea42b40>\nnew_user = {'avatar_url': '', 'email': 'todd80@example.com', 'name': 'Anna', 'nickname': '', ...}\n\n    @allure.title(\"Test delete user\")\n    @allure.description(\"Verify deleting a single user by UUID\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_delete_user(self, user_api_client: UserAPIClient, new_user: dict) -> None:\n        \"\"\"\n        Test deleting a single user by UUID.\n    \n        :param user_api_client: Instance of UserAPIClient\n        :param new_user: Fixture with a newly created user\n        \"\"\"\n        task_id = \"api-1\"\n        user_uuid = new_user[\"uuid\"]\n    \n        with allure.step(f\"Deleting user with UUID {user_uuid}\"):\n>           response_data = user_api_client.delete_user(user_uuid, task_id)\n\ntests/test_users.py:93: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.users.user_api_client.UserAPIClient object at 0x7f75cea42b40>\nuser_uuid = 'cedb6ca0-8471-4c9f-95b5-bdaceb3f733a', task_id = 'api-1'\n\n    def delete_user(self, user_uuid: str, task_id: str) -> dict[str, Any]:\n        \"\"\"\n        Deleting a single user by UUID.\n    \n        :param user_uuid: The UUID of the user to delete\n        :param task_id: Task ID\n        :return: Full API Response\n        \"\"\"\n        headers = {\"X-Task-Id\": task_id}\n        endpoint = f\"{USERS_ENDPOINT}/{user_uuid}\"\n        response = self.delete(endpoint, headers=headers)\n    \n        if not response.ok:\n            msg = f\"Request failed with status {response.status}\"\n>           raise ValueError(msg)\nE           ValueError: Request failed with status 500\n\nservices/users/user_api_client.py:69: ValueError","steps":[{"name":"Deleting user with UUID cedb6ca0-8471-4c9f-95b5-bdaceb3f733a","time":{"start":1733086961408,"stop":1733086961602,"duration":194},"status":"broken","statusMessage":"ValueError: Request failed with status 500\n","statusTrace":"  File \"/home/runner/work/qa-hackathon-raptors/qa-hackathon-raptors/tests/test_users.py\", line 93, in test_delete_user\n    response_data = user_api_client.delete_user(user_uuid, task_id)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-hackathon-raptors/qa-hackathon-raptors/services/users/user_api_client.py\", line 69, in delete_user\n    raise ValueError(msg)\n","steps":[],"attachments":[{"uid":"4e55f8995d9780cf","name":"API Response","source":"4e55f8995d9780cf.txt","type":"text/plain","size":59},{"uid":"720a9baf6a10c55b","name":"Status Code","source":"720a9baf6a10c55b.txt","type":"text/plain","size":3},{"uid":"b9c46f5779c4093e","name":"Headers","source":"b9c46f5779c4093e.txt","type":"text/plain","size":566},{"uid":"b8ed81b496a93a5e","name":"URL","source":"b8ed81b496a93a5e.txt","type":"text/plain","size":82}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"new_user::0","time":{"start":1733086961606,"stop":1733086962338,"duration":732},"status":"passed","steps":[],"attachments":[{"uid":"ca25ea7a254f6ab7","name":"API Response","source":"ca25ea7a254f6ab7.txt","type":"text/plain","size":14},{"uid":"30d1aab8af83401b","name":"Status Code","source":"30d1aab8af83401b.txt","type":"text/plain","size":3},{"uid":"233b6f3280b78e77","name":"Headers","source":"233b6f3280b78e77.txt","type":"text/plain","size":579},{"uid":"71fa061bb19dc9d5","name":"URL","source":"71fa061bb19dc9d5.txt","type":"text/plain","size":82}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1733086963719,"stop":1733086963722,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright::0","time":{"start":1733086963722,"stop":1733086963728,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"User API Operations"},{"name":"severity","value":"critical"},{"name":"epic","value":"User Management"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_users"},{"name":"subSuite","value":"TestUsersAPI"},{"name":"host","value":"fv-az1442-141"},{"name":"thread","value":"5573-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"new_user","value":"'api-3'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":1,"unknown":0,"total":3},"items":[{"uid":"45f2e0c2c92c5a1b","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/2//#testresult/45f2e0c2c92c5a1b","status":"broken","statusDetails":"ValueError: Request failed with status 404","time":{"start":1733086642029,"stop":1733086642029,"duration":0}},{"uid":"f0393b1fed5f8919","reportUrl":"https://ZhikharevAl.github.io/qa-hackathon-raptors/1//#testresult/f0393b1fed5f8919","status":"passed","time":{"start":1733085917642,"stop":1733085918291,"duration":649}}]},"tags":[]},"source":"d7762afb4894f5af.json","parameterValues":["'api-3'"]}